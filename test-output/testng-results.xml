<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-11-22T11:04:05 WAT" name="Suite" finished-at="2023-11-22T11:07:11 WAT" duration-ms="186471">
    <groups>
    </groups>
    <test started-at="2023-11-22T11:04:05 WAT" name="Test" finished-at="2023-11-22T11:07:11 WAT" duration-ms="186471">
      <class name="com.qa.test.ProfileUpdate">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.test.ProfileUpdate@20d525]" started-at="2023-11-22T11:05:33 WAT" name="beforeClass" finished-at="2023-11-22T11:06:23 WAT" duration-ms="49372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.test.ProfileUpdate@20d525]" started-at="2023-11-22T11:06:23 WAT" name="beforeMethod" finished-at="2023-11-22T11:06:23 WAT" duration-ms="837" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.test.ProfileUpdate@20d525]" started-at="2023-11-22T11:06:23 WAT" name="beforeMethod" finished-at="2023-11-22T11:06:27 WAT" duration-ms="3396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.test.ProfileUpdate.upadateProfile() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="upadateProfile()[pri:0, instance:com.qa.test.ProfileUpdate@20d525]" started-at="2023-11-22T11:06:27 WAT" name="upadateProfile" finished-at="2023-11-22T11:07:09 WAT" duration-ms="42267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- upadateProfile -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.test.ProfileUpdate@20d525]" started-at="2023-11-22T11:07:09 WAT" name="afterMethod" finished-at="2023-11-22T11:07:09 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.test.ProfileUpdate@20d525]" started-at="2023-11-22T11:07:09 WAT" name="afterMethod" finished-at="2023-11-22T11:07:11 WAT" duration-ms="1854" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=upadateProfile status=SUCCESS method=ProfileUpdate.upadateProfile()[pri:0, instance:com.qa.test.ProfileUpdate@20d525] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.qa.test.ProfileUpdate@20d525]" started-at="2023-11-22T11:07:11 WAT" name="afterClass" finished-at="2023-11-22T11:07:11 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.qa.test.ProfileUpdate -->
      <class name="com.qa.test.LoginTestcases">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:04:05 WAT" name="beforeTest" finished-at="2023-11-22T11:04:26 WAT" duration-ms="21436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:04:26 WAT" name="beforeClass" finished-at="2023-11-22T11:04:26 WAT" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:04:26 WAT" name="beforeMethod" finished-at="2023-11-22T11:04:27 WAT" duration-ms="813" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:04:27 WAT" name="beforeMethod" finished-at="2023-11-22T11:04:28 WAT" duration-ms="496" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.test.LoginTestcases.invalidEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidEmail()[pri:1, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:04:28 WAT" name="invalidEmail" finished-at="2023-11-22T11:04:38 WAT" duration-ms="10633" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidEmail -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:04:38 WAT" name="afterMethod" finished-at="2023-11-22T11:04:40 WAT" duration-ms="1394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidEmail status=SUCCESS method=LoginTestcases.invalidEmail()[pri:1, instance:com.qa.test.LoginTestcases@45c7e403] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:04:38 WAT" name="afterMethod" finished-at="2023-11-22T11:04:38 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:04:40 WAT" name="beforeMethod" finished-at="2023-11-22T11:04:41 WAT" duration-ms="850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:04:41 WAT" name="beforeMethod" finished-at="2023-11-22T11:04:41 WAT" duration-ms="80" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.test.LoginTestcases.unregisteredEmail()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="unregisteredEmail()[pri:2, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:04:41 WAT" name="unregisteredEmail" finished-at="2023-11-22T11:04:54 WAT" duration-ms="13384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unregisteredEmail -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:04:54 WAT" name="afterMethod" finished-at="2023-11-22T11:04:54 WAT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:04:54 WAT" name="afterMethod" finished-at="2023-11-22T11:04:56 WAT" duration-ms="1583" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=unregisteredEmail status=SUCCESS method=LoginTestcases.unregisteredEmail()[pri:2, instance:com.qa.test.LoginTestcases@45c7e403] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:04:56 WAT" name="beforeMethod" finished-at="2023-11-22T11:04:56 WAT" duration-ms="798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:04:56 WAT" name="beforeMethod" finished-at="2023-11-22T11:04:57 WAT" duration-ms="57" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.test.LoginTestcases.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="invalidPassword()[pri:3, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:04:57 WAT" name="invalidPassword" finished-at="2023-11-22T11:05:11 WAT" duration-ms="14221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:05:11 WAT" name="afterMethod" finished-at="2023-11-22T11:05:11 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:05:11 WAT" name="afterMethod" finished-at="2023-11-22T11:05:12 WAT" duration-ms="1456" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidPassword status=SUCCESS method=LoginTestcases.invalidPassword()[pri:3, instance:com.qa.test.LoginTestcases@45c7e403] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:05:12 WAT" name="beforeMethod" finished-at="2023-11-22T11:05:13 WAT" duration-ms="800" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:05:13 WAT" name="beforeMethod" finished-at="2023-11-22T11:05:13 WAT" duration-ms="53" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.test.LoginTestcases.successfulLogin() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="successfulLogin()[pri:4, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:05:13 WAT" name="successfulLogin" finished-at="2023-11-22T11:05:28 WAT" duration-ms="15302" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Book a fumigation service today1] but found [Book a fumigation service today]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Book a fumigation service today1] but found [Book a fumigation service today]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.qa.test.LoginTestcases.successfulLogin(LoginTestcases.java:152)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:05:31 WAT" name="afterMethod" finished-at="2023-11-22T11:05:31 WAT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:05:31 WAT" name="afterMethod" finished-at="2023-11-22T11:05:32 WAT" duration-ms="1710" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=successfulLogin status=FAILURE method=LoginTestcases.successfulLogin()[pri:4, instance:com.qa.test.LoginTestcases@45c7e403] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:05:32 WAT" name="afterClass" finished-at="2023-11-22T11:05:33 WAT" duration-ms="976" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.qa.test.LoginTestcases@45c7e403]" started-at="2023-11-22T11:07:11 WAT" name="afterTest" finished-at="2023-11-22T11:07:11 WAT" duration-ms="511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- com.qa.test.LoginTestcases -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
